{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Feedback/Feedback.js","App/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","options","map","option","className","onClick","toLowerCase","type","Notification","message","Feedback","state","key","setState","preState","newState","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedbackPercentage","Math","round","this","props","title","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGe,SAASA,EAAT,GAMX,IAAD,IALDC,YAKC,MALM,EAKN,MAJDC,eAIC,MAJS,EAIT,MAHDC,WAGC,MAHK,EAGL,MAFDC,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,gCACE,4CACA,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,aCfO,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,gBAEC,IADDC,eACC,MADS,CAAC,OAAQ,UAAW,OAC7B,EACD,OACE,8BACGA,EAAQC,KAAI,SAAAC,GACX,OACE,wBAEEC,UAAU,SACVC,QAAS,kBAAML,EAAgBG,EAAOG,gBACtCC,KAAK,SAJP,SAMGJ,GALIA,QCTF,SAASK,EAAT,GAAoD,IAAD,IAA3BC,eAA2B,MAAjB,cAAiB,EAChE,OAAO,4BAAIA,I,ICEPC,E,4MACJC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,gBAAkB,SAAAY,GAChB,EAAKC,UAAS,SAAAC,GACZ,IAAMC,EAAWD,EAASF,GAAO,EACjC,OAAO,eAAGA,EAAMG,O,EAIpBC,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQjB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBqB,gCAAkC,WAChC,IAAIC,EAA6B,EAMjC,OALwB,IAApB,EAAKP,MAAMjB,OACbwB,EAA6BC,KAAKC,MAC/B,EAAKT,MAAMjB,KAAO,EAAKsB,qBAAwB,MAG7CE,G,4CAGT,WACE,MAA+BG,KAAKV,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,6BAAKyB,KAAKC,MAAMC,QAEhB,cAACxB,EAAD,CACEE,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBAAiBqB,KAAKrB,kBAGO,IAA9BqB,KAAKL,qBACJ,cAACvB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKL,qBACZlB,mBAAoBuB,KAAKJ,oCAG3B,cAACT,EAAD,CAAcC,QAAQ,6B,GAjDTe,aAwDRd,IAEfA,EAASe,aAAe,CACtBF,MAAO,2B,IC7DHG,E,4JACJ,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CAAUmB,MAAM,mC,GALRC,aAYHE,ICXfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.88b9399a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good = 0,\n  neutral = 0,\n  bad = 0,\n  total = 0,\n  positivePercentage = 0,\n}) {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total}</li>\n        <li>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function FeedbackOptions({\n  onLeaveFeedback,\n  options = ['Good', 'Neutral', 'Bad'],\n}) {\n  return (\n    <div>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            className=\"button\"\n            onClick={() => onLeaveFeedback(option.toLowerCase())}\n            type=\"button\"\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message = 'No feedback' }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport Statistics from '../Statistics';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Notification from '../Notification';\nimport PropTypes from 'prop-types';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = key => {\n    this.setState(preState => {\n      const newState = preState[key] + 1;\n      return { [key]: newState };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercentage = 0;\n    if (this.state.good !== 0) {\n      positiveFeedbackPercentage = Math.round(\n        (this.state.good / this.countTotalFeedback()) * 100,\n      );\n    }\n    return positiveFeedbackPercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <h2>{this.props.title}</h2>\n\n        <FeedbackOptions\n          options={['Good', 'Neutral', 'Bad']}\n          onLeaveFeedback={this.onLeaveFeedback}\n        />\n\n        {this.countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n\nFeedback.defaultProps = {\n  title: 'this is a feedback form',\n};\n\nFeedback.propTypes = {\n  title: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport Feedback from '../components/Feedback';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Feedback title=\"Please, leave feedback\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}